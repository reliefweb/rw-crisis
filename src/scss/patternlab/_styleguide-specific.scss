/**
 * Pattern Lab-Specific Styles
 *
 * This stylesheet is for styles you want to include only when the interface is being viewed within Pattern Lab.
 * This is helpful for displaying demo styles for grids, animations, color swatches, etc
 * It's also helpful for overriding context-specific styles like fixed or absolutely positioned elements
 * These styles will not be your production CSS.
 */

// Style Guide Interface Colors
$sg-primary : #222;
$sg-secondary : #808080;
$sg-tertiary : #ddd;
$sg-quaternary : #fff;
$sg-quinary : #999;
$sg-tint : rgba(255,255,255,0.05);
$sg-tint-2 : rgba(255,255,255,0.25);
$sg-tone : rgba(0,0,0,0.1);
$sg-tone-2 : rgba(0,0,0,0.3);

// Typography
$sg-font-size-norm : 100%;
$sg-font-size-sm : 70%;
$sg-font-size-large : 120%;

// Defaults
$sg-space : 1em;
$sg-doublespace : $sg-space*2;
$sg-pad : 1em;
$sg-pad-half : $sg-pad/2;

// Dimensions
$offset-top: 2em;

// Breakpoints
$sg-bp-small : 400px;
$sg-bp-small-2 : $sg-bp-small;
$sg-bp-med : 750px;
$sg-bp-large : 900px;
$sg-bp-xl : 1200px;

$animate-quick: 0.2s;

body {// just giving everything an extra level of specificity so it can override PL defaults
  // Demo to show grid system - in this stylesheet because it shouldn't be included in the production styles
  .demo {
    overflow: hidden;
    margin-bottom: 1rem;
  }

  .demo .gi, .demo .demo-block {
    background: $sg-tertiary;
    color: $sg-secondary;
    text-align: center;
    margin-bottom: $sg-pad-half;
    padding: 1em !important;

    &:nth-of-type(2n) {
      color: $sg-tertiary;
      background: $sg-secondary;
    }

    .gi {
      background: $sg-tone;
      color: $sg-tertiary;

      &:nth-of-type(2n) {
        background: $sg-tone-2;
      }
    }
  }

  //Demo box for animation
  .demo-animate {
    background: #ddd;
    padding: $sg-pad;
    margin-bottom: $sg-space;
    text-align: center;
  }

  //Animate Demo to show
  .animate-move {
    position: relative;

    .demo-shape {
      position: absolute;
      top: 0;
      left: 0;
      bottom: 0;
      width: 20px;
      background: $sg-secondary;
    }

    &:hover {
      > .demo-shape {
        left: 100%;
        margin-left: -20px;
      }
    }
  }

  // Style Guide color swatches
  .sg-colors {
    overflow: hidden;
    >li {
      overflow: hidden;
      border: 1px solid $sg-tertiary;
      padding: 0.3em;
      margin: 0;
      box-sizing: border-box;
      .sg-swatch {
        display: block;
        height: 50px;
        float: left;
        width: 33%;
        outline: dotted 1px hsl(0, 0%, 50%);
      }
      .sg-info {
        line-height: 1;
        float: right;
        width: 66%;
      }
      @media all and (min-width: $sg-bp-small) {
        float: left;
        width: 49%;
        margin-right: 1%;
        .sg-swatch {
          height: 100px;
        }
      }
      @media all and (min-width: $sg-bp-large) {
        width: 24%;
      }
    }
  }


  .sg-code-contains {
    code {
      color: black;
    }
  }

  .needsrefactor:before {
      color: #a4799d !important;
  }
}

.sg-breakpoints {
  .breakpoints {
    >li {
      position: absolute;
      border-left: solid 3px hsl(0, 0%, 35%);
      height: 100%;
      >.label {
        @include transform(rotate(90deg));
        @include transform-origin(bottom, left);
        display: block;
//        position: absolute;
//        bottom: 20px;
        background: hsl(0, 0%, 35%);
        padding: 3px;
        color: white;
      }
      &:hover {
        opacity: 0.5;
      }
    }
  }
  .device_widths {
    padding-top: 20px;
    >li {
      border-bottom: solid 3px hsl(0, 0%, 80%);
      text-align: right;
      margin-bottom: 15px;
      padding-right: 15px;
      border-right: solid 3px hsl(0, 0%, 80%);
    }
  }
}

.demo-animate {
  min-height: 60px;
  cursor: pointer;
}
.animate-fade {
  @extend %animation-opacity;
  opacity: 1;
  &:hover {
    opacity: 0;
  }
}
.animate-min-height {
  @extend %animation-min-height;
  min-height: 60px;
  &:hover {
    min-height: 180px;
  }
}
.animate-background-color {
  @extend %animation-background-color;
  &:hover {
    background-color: $color--black;
  }
}
.animate-text-color {
  @extend %animation-text-color;
  &:hover {
    color: $color--error;
  }
}
.animate-all {
  @extend %animation-all;
  &:hover {
    color: $color--error;
    background: $color--black;
  }
}

pre {
  margin-top: 0;
}

// Mess with patterns when laid out on the big view all page
.site-header{
  .sg-pattern & {
    position: relative;
  }
}
.sg-pattern-body {
  -webkit-transform: translateZ(0); // fixed position elements will be contrained to this, so patterns don't go to the top of the all patterns list ~ http://stackoverflow.com/a/15885486
}


// UN icons
.sg-un-icons {
  outline: 1px solid red;
  [class*="un-icon"] {
    &:before {
      font-size: 2em;
    }
  }
}
