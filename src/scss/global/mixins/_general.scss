/* ==========================================================================
   Global Mixins - General
   ========================================================================== */


/* Mixin - Antialiased
   ========================================================================== */

@mixin antialiased() {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}



/* Mixin - Arrow
   ========================================================================== */
/*
 * @params
 *  $color
 *  $direction
 *  $arrow-length
 *  $arrow-breadth
 */
@mixin arrow($color: black, $direction: right, $arrow-length: 0.66em, $arrow-breadth: $arrow-length * 1.515151515) {
  $arrow-breadth-half: $arrow-breadth / 2;
  display: block;
  position: absolute;
  width: 0;
  height: 0;
  border-style: solid;
  color: transparent;
  content: '.';
  @if $direction == right {
    border: {
      width: $arrow-breadth-half 0 $arrow-breadth-half $arrow-length;
      color: transparent transparent transparent $color;
    }
  }
  @else if $direction == left {
    border: {
      width: $arrow-breadth-half $arrow-length $arrow-breadth-half 0;
      color: transparent $color transparent transparent;
    }
  }
  @else if $direction == up {
    border: {
      width: 0 $arrow-breadth-half $arrow-length $arrow-breadth-half;
      color: transparent transparent $color transparent;
    }
  }
  @else if $direction == down {
    border: {
      width: $arrow-length $arrow-breadth-half 0 $arrow-breadth-half;
      color: $color transparent transparent transparent;
    }
  }
}

/* Mixin - EQ
   ========================================================================== */
/*
 * @params
 *  $state
 */

@mixin eq($state) {
  &[data-eq-state="#{$state}"] {
    @content;
  }
}

/* Mixin - Arrow Box
   ========================================================================== */
/*
 * @params
 *  $size,
 *  $color,
 *  $border-width,
 *  $border-color,
 *  $direction: up
 */
@mixin arrow-box($size,
  $color,
  $border-width,
  $border-color,
  $direction: up,
  $arrow: true) {
  position: relative;
  background: $color;
  border: 1px solid $border-color;

  @if $arrow {
    &:after, &:before {
      @if $direction == 'left' {
        right: 100%;
        top: 50%;
      } @else if $direction == 'right' {
        left: 100%;
        top: 50%;
      } @else if $direction == 'down' {
        top: 100%;
        left: 50%;
      } @else {
        bottom: 100%;
        left: 50%;
      }

      border: solid transparent;
      content: " ";
      height: 0;
      width: 0;
      position: absolute;
      pointer-events: none;
    }

    &:after {
      @if $direction == 'left' {
        border-right-color: $color;
        border-width: $size;
        margin-top: -1 * $size;
      } @else if $direction == 'right' {
        border-left-color: $color;
        border-width: $size;
        margin-top: -10px;
      } @else if $direction == 'down' {
        border-top-color: $color;
        border-width: $size;
        margin-left: -1 * $size;
      } @else {
        border-bottom-color: $color;
        border-width: $size;
        margin-left: -1 * $size;
      }
    }

    &:before {
      @if $direction == 'left' {
        border-right-color: $border-color;
        border-width: $size + em(1px);
        margin-top: -1 * ($size + em(1px));
      } @else if $direction == 'right' {
        border-left-color: $border-color;
        border-width: $size + em(1px);
        margin-top: -1 * ($size + em(1px));
      } @else if $direction == 'down' {
        border-top-color: $border-color;
        border-width: $size + em(1px);
        margin-left: -1 * ($size + em(1px));
      } @else {
        border-bottom-color: $border-color;
        border-width: $size + em(1px);
        margin-left: -1 * ($size + em(1px));
      }
    }
  }
}




@mixin padding-sides($side: both, $amount: 0.5rem) {
  padding: {
    @if $side == left {
      left: $amount;
    }
    @else if $side == right {
      right: $amount;
    }
    @else {
      left: $amount;
      right: $amount;
    }
  }
}
@mixin margin-sides($side: both, $amount: 0.5rem) {
  margin: {
    @if $side == left {
      left: $amount;
    }
    @else if $side == right {
      right: $amount;
    }
    @else {
      left: $amount;
      right: $amount;
    }
  }
}
